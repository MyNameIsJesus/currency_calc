# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'calc.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from bs4 import BeautifulSoup
import requests
import math


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowModality(QtCore.Qt.WindowModal)
        MainWindow.setEnabled(True)
        MainWindow.resize(825, 434)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(825, 434))
        MainWindow.setMaximumSize(QtCore.QSize(825, 434))
        MainWindow.setContextMenuPolicy(QtCore.Qt.ActionsContextMenu)
        MainWindow.setAcceptDrops(False)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("QPushButton:hover\n"
"{\n"
"    transform:scale(1.12);\n"
"}")
        MainWindow.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        MainWindow.setAnimated(True)
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        MainWindow.setDockNestingEnabled(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setStyleSheet("QPushButton:hover{\n"
"    transform:scale(1.15);\n"
"    background-color:#90f096;\n"
"    \n"
"}\n"
"QPushButton:pressed{\n"
"    background-color:#37ad4f;\n"
"    border-style:none;\n"
"}\n"
"QComboBox{\n"
"    text-align:center;\n"
"    padding: 1px;}")
        self.centralwidget.setObjectName("centralwidget")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(50, 80, 241, 51))
        self.textEdit.setAutoFillBackground(False)
        self.textEdit.setStyleSheet("font-size:20pt;")
        self.textEdit.setObjectName("textEdit")
        self.textEdit_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_2.setGeometry(QtCore.QRect(450, 80, 241, 51))
        self.textEdit_2.setStyleSheet("font-size:20pt;\n"
"background-color:#e3e8e4;")
        self.textEdit_2.setReadOnly(True)
        self.textEdit_2.setObjectName("textEdit_2")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(300, 80, 91, 51))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox.sizePolicy().hasHeightForWidth())
        self.comboBox.setSizePolicy(sizePolicy)
        self.comboBox.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.comboBox.setStyleSheet("font-size:16pt;\n"
"")
        self.comboBox.setEditable(False)
        self.comboBox.setFrame(False)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(710, 80, 73, 51))
        self.label.setStyleSheet("font-size: 20pt;\n"
"font-weight:bold;")
        self.label.setTextFormat(QtCore.Qt.RichText)
        self.label.setScaledContents(False)
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setEnabled(True)
        self.pushButton.setGeometry(QtCore.QRect(280, 270, 261, 71))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton.sizePolicy().hasHeightForWidth())
        self.pushButton.setSizePolicy(sizePolicy)
        self.pushButton.setStyleSheet("font-size:20pt;\n"
"hover:{\n"
"    background-color:red;\n"
"}")
        self.pushButton.setAutoDefault(False)
        self.pushButton.setDefault(False)
        self.pushButton.setFlat(False)
        self.pushButton.setObjectName("pushButton")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.ReturnValue()


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "currency calculator"))
        self.comboBox.setItemText(0, _translate("MainWindow", "USD"))
        self.comboBox.setItemText(1, _translate("MainWindow", "RUB"))
        self.comboBox.setItemText(2, _translate("MainWindow", "EUR"))
        self.comboBox.setItemText(3, _translate("MainWindow", "CNY"))
        self.comboBox.setItemText(4, _translate("MainWindow", "PLN"))
        self.comboBox.setItemText(5, _translate("MainWindow", "CHF"))
        self.comboBox.setItemText(6, _translate("MainWindow", "CZK"))
        self.comboBox.setItemText(7, _translate("MainWindow", "BTC"))
        self.comboBox.setItemText(8, _translate("MainWindow", "ETH"))
        self.comboBox.setItemText(9, _translate("MainWindow", "USDT"))
        self.comboBox.setItemText(10, _translate("MainWindow", "GBP"))
        self.comboBox.setItemText(11, _translate("MainWindow", "BYN"))
        self.comboBox.setItemText(12, _translate("MainWindow", "JPY"))
        self.comboBox.setItemText(13, _translate("MainWindow", "DKK"))
        self.comboBox.setItemText(14, _translate("MainWindow", "HUF"))
        self.comboBox.setItemText(15, _translate("MainWindow", "ILS"))
        self.comboBox.setItemText(16, _translate("MainWindow", "AUD"))
        self.comboBox.setItemText(17, _translate("MainWindow", "NOK"))
        self.comboBox.setItemText(18, _translate("MainWindow", "SEK"))
        self.comboBox.setItemText(19, _translate("MainWindow", "AED"))
        self.comboBox.setItemText(20, _translate("MainWindow", "AZN"))
        self.comboBox.setItemText(21, _translate("MainWindow", "BGN"))
        self.comboBox.setItemText(22, _translate("MainWindow", "BRL"))
        self.comboBox.setItemText(23, _translate("MainWindow", "CLP"))
        self.comboBox.setItemText(24, _translate("MainWindow", "DZD"))
        self.comboBox.setItemText(25, _translate("MainWindow", "EEK"))
        self.comboBox.setItemText(26, _translate("MainWindow", "EGP"))
        self.comboBox.setItemText(27, _translate("MainWindow", "GEL"))
        self.comboBox.setItemText(28, _translate("MainWindow", "HKD"))
        self.comboBox.setItemText(29, _translate("MainWindow", "HUF"))
        self.comboBox.setItemText(30, _translate("MainWindow", "IDR"))
        self.comboBox.setItemText(31, _translate("MainWindow", "INR"))
        self.comboBox.setItemText(32, _translate("MainWindow", "IQD"))
        self.comboBox.setItemText(33, _translate("MainWindow", "IRR"))
        self.comboBox.setItemText(34, _translate("MainWindow", "ISK"))
        self.comboBox.setItemText(35, _translate("MainWindow", "KGS"))
        self.comboBox.setItemText(36, _translate("MainWindow", "KWD"))
        self.comboBox.setItemText(37, _translate("MainWindow", "KZT"))
        self.comboBox.setItemText(38, _translate("MainWindow", "LBP"))
        self.comboBox.setItemText(39, _translate("MainWindow", "LTL"))
        self.comboBox.setItemText(40, _translate("MainWindow", "LVL"))
        self.comboBox.setItemText(41, _translate("MainWindow", "LYD"))
        self.comboBox.setItemText(42, _translate("MainWindow", "MAD"))
        self.comboBox.setItemText(43, _translate("MainWindow", "MDL"))
        self.comboBox.setItemText(44, _translate("MainWindow", "MNT"))
        self.comboBox.setItemText(45, _translate("MainWindow", "MTL"))
        self.comboBox.setItemText(46, _translate("MainWindow", "MXN"))
        self.comboBox.setItemText(47, _translate("MainWindow", "MYR"))
        self.comboBox.setItemText(48, _translate("MainWindow", "NWD"))
        self.comboBox.setItemText(49, _translate("MainWindow", "NZD"))
        self.comboBox.setItemText(50, _translate("MainWindow", "PEN"))
        self.comboBox.setItemText(51, _translate("MainWindow", "PHP"))
        self.comboBox.setItemText(52, _translate("MainWindow", "PKR"))
        self.comboBox.setItemText(53, _translate("MainWindow", "ROL"))
        self.comboBox.setItemText(54, _translate("MainWindow", "RON"))
        self.comboBox.setItemText(55, _translate("MainWindow", "SAR"))
        self.comboBox.setItemText(56, _translate("MainWindow", "SEK"))
        self.comboBox.setItemText(57, _translate("MainWindow", "SGD"))
        self.comboBox.setItemText(58, _translate("MainWindow", "SLT"))
        self.comboBox.setItemText(59, _translate("MainWindow", "SYP"))
        self.comboBox.setItemText(60, _translate("MainWindow", "THB"))
        self.comboBox.setItemText(61, _translate("MainWindow", "TJS"))
        self.comboBox.setItemText(62, _translate("MainWindow", "TMT"))
        self.comboBox.setItemText(63, _translate("MainWindow", "TMM"))
        self.comboBox.setItemText(64, _translate("MainWindow", "TND"))
        self.comboBox.setItemText(65, _translate("MainWindow", "TRL"))
        self.comboBox.setItemText(66, _translate("MainWindow", "TRY"))
        self.comboBox.setItemText(67, _translate("MainWindow", "UZS"))
        self.comboBox.setItemText(68, _translate("MainWindow", "VND"))
        self.comboBox.setItemText(69, _translate("MainWindow", "XDR"))
        self.comboBox.setItemText(70, _translate("MainWindow", "XOF"))
        self.comboBox.setItemText(71, _translate("MainWindow", "ZAR"))
        self.label.setText(_translate("MainWindow", "UAH"))
        self.pushButton.setText(_translate("MainWindow", "Count"))
        self.textEdit.setText(_translate('MainWindow', "1"))

    def CountCurrency(self):
        Crypto = ['BTC', 'USDT', 'ETH']
        currency = self.comboBox.currentText()
        if currency in Crypto:
            if currency == 'BTC':
                currency = 'bitcoin'
            elif(currency == 'USDT'):
                currency = 'tether'
            elif(currency == 'ETH'):
                currency = 'ethereum'
            URL = 'https://minfin.com.ua/currency/crypto/'+ currency +'-uah/'
            Headers = {
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36'}
            response = requests.get(URL, Headers)
            soup = BeautifulSoup(response.content, 'lxml')
            items = soup.find('p', class_='mfm-coin--price')

        else:
            currency.lower()
            URL = 'https://minfin.com.ua/currency/nbu/' + currency + '/'
            Headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36'}
            response = requests.get(URL, Headers)
            soup = BeautifulSoup(response.content, 'lxml')
            items = soup.find('div', class_='data-title responsive-show mfm-text-nowrap mfm-text-left')
        gotString = items.text
        if currency == "bitcoin":
            gotString = gotString[0:10]
            gotString = gotString.replace(',', '.')
            gotString = gotString.replace(' ', '')
            current = float(gotString)
        elif(currency == "ethereum"):
            gotString = gotString[0:10]
            gotString = gotString.replace(',', '.')
            gotString = gotString.replace(' ', '')
            current = float(gotString)
        elif(currency == "tether"):
            gotString = gotString[0:6]
            gotString = gotString.replace(',', '.')
            gotString = gotString.replace(' ', '')
            current = float(gotString)
        else:
            current = float(gotString[0:6])
        value = self.textEdit.toPlainText()
        current *= float(value)
        current = round(current, 2)
        result = str(current)
        self.textEdit_2.setText(result)
    def ReturnValue(self):
        self.pushButton.clicked.connect(self.CountCurrency)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
